<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name ="google-signin-client_id" content="515485639470-b2bmvophgjaptqotdvej0jmk8ehg10rd.apps.googleusercontent.com">
  <title>Document</title>
</head>
<body>
  <div class="row my-5 justify-content-center">
    <div class="col-8 col-md-6 col-lg-4">
      <h3 class="text-center mb-5">로그인</h3>
      <form name="frm" method="post" action="/login">
        <div class="input-group my-2">
          <div class="input-group-text">이 메 일</div>
          <input class="form-control" name="email" />
        </div>
        <div class="input-group">
          <div class="input-group-text">비밀번호</div>
          <input
            class="form-control"
            name="password"
            type="password"
          />
        </div>
        <div class="my-3">
          <button class="btn btn-success w-100" type="submit">로그인</button>
        </div>
  
        <ul>
          <li id="GgCustomLogin">
           <a href="javascript:void(0)">
            <span>Login with Google</span>
           </a>
          </li>
         </ul>
        
        <div class="text-end mt-3"><a href="/join">회원가입</a></div>
      </form>
    </div>
  </div>
<!--tomato@hot.com   -->

  <script type = "module">
    import { app } from "/javascripts/firebase.js";
    import { getAuth, signInWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/9.22.1/firebase-auth.js"
    const auth = getAuth(app);
    console.log(auth);
    
    //로그인 버튼을 눌렀을 때
    //submit이슈 - submit이벤트를 처리할때 캡쳐링으로 인한 이벤트 전이가 발생함 - 방어해야함
    $(frm).on("submit", function(e){
      console.log('로그인버튼 클릭');
      e.preventDefault();
      //사용자가 화면에 입력한 이멜 주소 담기
      let email = $(frm.email).val();
      //사용자가 화면에 입력한 비번 담기
      let password = $(frm.password).val();
      console.log(`${email} ${password}`);
    //https://firebase.google.com/docs/auth/web/start?hl=ko&authuser=0
    //기존 사용자가 자신의 이메일 주소와 비밀번호를 사용해 로그인할 수 있는 양식을 만듭니다. 
    //사용자가 양식을 작성하면 signInWithEmailAndPassword 메서드를 호출합니다.
    
      signInWithEmailAndPassword(auth, email, password) // 함수다. 이벤트처리x
    .then((res) => { // userCredential 객체에는 로그인에 성공한 사용자에 대한 정보가 포함되어 있다.
      console.log(res);//[object, Object]

      // Signed in 
      // 여기 res엔 실제 사용자에 대한 정보가 들어가있다.
      const user = res.user;
      //JSON.stringify(user)
      console.log(`user ===> ${JSON.stringify(user)}`);//[object, Object]  - JSON.parse():JSON-Array
      console.log(`uid ====> ${user.uid}`);
      console.log(`email ====> ${user.email}`);
      localStorage.setItem("uid",`${user.uid}`)
      localStorage.setItem("email",`${user.email}`)
      const storedUID = localStorage.getItem("uid");
      const storedEmail = localStorage.getItem("email");
      // Firebase Authentication은 각 사용자에게 고유한 uid를 할당

      if (user.uid && user.email){
        alert("로그인성공!!")
        window.location.href = "/";
      }else{
        alert("회원 정보를 확인하세요.");
      }

    })
    .catch((error) => {
      const errorCode = error.code;
      const errorMessage = error.message;
      alert(`로그인 실패: ${errorMessage}`);
    });
    
    })
    
    </script>


<script>
  //처음 실행하는 함수
  function init() {
    gapi.load('auth2', function() {
      gapi.auth2.init();
      options = new gapi.auth2.SigninOptionsBuilder();
      options.setPrompt('select_account');
          // 추가는 Oauth 승인 권한 추가 후 띄어쓰기 기준으로 추가
      options.setScope('email profile openid https://www.googleapis.com/auth/user.birthday.read');
          // 인스턴스의 함수 호출 - element에 로그인 기능 추가
          // GgCustomLogin은 li태그안에 있는 ID, 위에 설정한 options와 아래 성공,실패시 실행하는 함수들
      gapi.auth2.getAuthInstance().attachClickHandler('GgCustomLogin', options, onSignIn, onSignInFailure);
    })
  }
  
  function onSignIn(googleUser) {
    var access_token = googleUser.getAuthResponse().access_token
    
    $.ajax({
        // people api를 이용하여 프로필 및 생년월일에 대한 선택동의후 가져온다.
      url: 'https://people.googleapis.com/v1/people/me'
          // key에 자신의 API 키를 넣습니다.
      , data: {personFields:'birthdays', key:'515485639470-b2bmvophgjaptqotdvej0jmk8ehg10rd.apps.googleusercontent.com', 'access_token': access_token}
      , method:'GET'
    })
    .done(function(e){
          //프로필을 가져온다.
      var profile = googleUser.getBasicProfile();
      console.log(profile)
      window.location.href = "http://localhost:3000"
    })
    .fail(function(e){
      console.log(e);
    })
  }
  function onSignInFailure(t){		
    console.log(t);
  }

  </script>
  <script src="https://apis.google.com/js/platform.js?onload=init" async defer></script>  

  <!-- <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.5.2/firebase-app.js";
    import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.5.2/firebase-analytics.js";
    import { getAuth, signInWithPopup, GoogleAuthProvider } from "https://www.gstatic.com/firebasejs/10.5.2/firebase-auth.js";
    const firebaseConfig = {
      apiKey: "AIzaSyBWeR8UdEmK9aCGxKgBjaG0jK3euA4IWsw",
      authDomain: "mydatabase-e2522.firebaseapp.com",
      databaseURL: "https://mydatabase-e2522-default-rtdb.firebaseio.com",
      projectId: "mydatabase-e2522",
      storageBucket: "mydatabase-e2522.appspot.com",
      messagingSenderId: "573847235209",
      appId: "1:573847235209:web:76e5e4978f160c6a4e7458",
      measurementId: "G-TYG933L2N7"
    };
  
    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const analytics = getAnalytics(app);

    const provider = new GoogleAuthProvider();
    const auth1 = getAuth();
    
    document.getElementById('google-btn').addEventListener('click', ()=>{

      console.log("연동이 왜 안되지?")
      //읽히긴 하는데 여기서 서버와 연동이 안 된다.
      signInWithPopup(auth1, provider)
        .then((result) => {
          const credential = GoogleAuthProvider.credentialFromResult(result);
          const token = credential.accessToken;

          const user = result.user;

          console.log(`user ===> ${JSON.stringify(user)}`);//[object, Object]  - JSON.parse():JSON-Array
          console.log(`uid ====> ${user.uid}`);
          console.log(`email ====> ${user.email}`);
          localStorage.setItem("uid",`${user.uid}`)
          localStorage.setItem("email",`${user.email}`)


          
        }).catch((error) => {
          const errorCode = error.code;
          const errorMessage = error.message;
          const email = error.customData.email;
          const credential = GoogleAuthProvider.credentialFromError(error);
        });

    })
  </script>

   

</body>
</html>





