<body>
    <div id="main">
        <h1>게시판</h1>
        <hr><br>
        <button type="button" class="btn btn-primary">
            <a class="page-link" href="/board/write">글쓰기 </a>
        </button>
        <button type="button" class="btn btn-info">공지</button>
        <br><br>
        <table class="table table-hover">
            <thead>
                <tr>
                    <td>번호</td>
                    <td>글제목</td>
                    <td>작성자</td>
                    <td>등록일</td>
                    <td>조회수</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>265121</td>
                    <td>엌 아래글 진짜 관리자임?</td>
                    <td>ㅇㅇ</td>
                    <td>2020.04.23</td>
                </tr>
                <tr>
                    <td>265120</td>
                    <td>본인 방금 추천 많이 받아서 개념글 상상함</td>
                    <td>운영자</td>
                    <td>2020.04.23</td>
                </tr>
            </tbody>
        </table>

        <br><br>
        <div class="pagination-container">
            <div class="prev-button">이전</div>
            <div class="number-button-wrapper"><span class="number-button">1</span></div>
            <div class="next-button">이후</div>
          </div>
    </div>

<script>
// board 페이지에서 localStorage에서 데이터를 가져와서 노출
let boardsStr = localStorage.getItem("boards");
console.log(boardsStr)

if(boardsStr == null)
{
    const listStr = JSON.stringify([]);
    localStorage.setItem("boards",listStr);
    boardsStr = listStr;
}
// boardsStr은 이전에 문자열로 변환한 게시글 데이터를 담고 있는 것
const boardsObj = JSON.parse(boardsStr);
const tableBody = document.querySelector(".table tbody");

// 기존에 있는 테이블 내용 지우기
tableBody.innerHTML = "";



const template = (index, objValue) =>{
    return `
        <tr>
        <td>${index+1}</td>
        <td><a href="/board/read?index=${objValue.index}">${objValue.subject}</a></td>
        <td>${objValue.writer}</td>
        <td>${objValue.date}</td>
        <td>${objValue.views}</td>
        </tr>
    `;
};
const tbody = document.querySelector("tbody");

for(let i = 0; i < boardsObj.length; i++)
{
    tbody.innerHTML += template(i,boardsObj[i]);
    boardsObj[i].refresh = false;
    const refreshStr = JSON.stringify(boardsObj);
    localStorage.setItem("boards", refreshStr);

}

const COUNT_PER_PAGE = 3; // 페이지 당 보여줄 게시물 수
const numberButtonWrapper = document.querySelector('.number-button-wrapper'); // 페이지네이션 버튼 wrapper
const ul = document.querySelector('ul'); // 게시물을 담을 unordered list
const prevButton = document.querySelector('.prev-button'); // 이전 페이지 버튼
const nextButton = document.querySelector('.next-button'); // 이후 페이지 버튼
let pageNumberButtons;
let currentPage = 1; // 초기 페이지 번호

const getTotalPageCount = () => {
  return Math.ceil(boardsObj.length / COUNT_PER_PAGE);
};


const setPageButtons = () => {
  numberButtonWrapper.innerHTML = '';

  for (let i = 1; i <= getTotalPageCount(); i++) {
    numberButtonWrapper.innerHTML += `<span class="number-button"> ${i} </span`;
  }

  numberButtonWrapper.firstChild.classList.add('selected');
  pageNumberButtons = document.querySelectorAll('.number-button');
};


const setPageOf = (pageNumber) => {
  tableBody.innerHTML = ''; // 현재 테이블의 내용 초기화

  const startIdx = COUNT_PER_PAGE * (pageNumber - 1);
  const endIdx = COUNT_PER_PAGE * pageNumber;

  for (let i = startIdx; i < endIdx && i < boardsObj.length; i++) {
    // 이 부분에서 번호/글제목/작성자/등록일/조회수를 가져와서 템플릿에 적용
    const rowHtml = template(i, boardsObj[i]);
    tableBody.innerHTML += rowHtml;
  }
};

const moveSelectedPageHighlight = () => {
  const pageNumberButtons = document.querySelectorAll('.number-button'); // 페이지 버튼들

  pageNumberButtons.forEach((numberButton) => {
    if (numberButton.classList.contains('selected')) {
      numberButton.classList.remove('selected');
    }
  });

  pageNumberButtons[currentPage - 1].classList.add('selected');
};

setPageButtons();
setPageOf(currentPage);

pageNumberButtons.forEach((numberButton) => {
  numberButton.addEventListener('click', (e) => {
    currentPage = +e.target.innerHTML;
    console.log(currentPage);
    setPageOf(currentPage);
    moveSelectedPageHighlight();
  });
});


prevButton.addEventListener('click', () => {
  if (currentPage > 1) {
    currentPage -= 1;
    setPageOf(currentPage);
    moveSelectedPageHighlight();
  }
});

nextButton.addEventListener('click', () => {
  if (currentPage < getTotalPageCount()) {
    currentPage += 1;
    setPageOf(currentPage);
    moveSelectedPageHighlight();
  }
});




</script>
