

<body>
    <main>
        <h2>작성한 게시글</h2>
        <form  id = "viewFrm">
            <div id = "subject">제목 :</div>
            <div id = "writer">작성자 : </div>
            <div id = "date">작성일 : </div>
            <div id = "content">내용 : </div>
        </form>
        <button type="button" class="btn btn-info"><a class="page-link" href="/board/board">목록</a></button>
        <button type="button" class="btn btn-info" id = "modify" >수정</button>
        <button type="button" class="btn btn-info" id = "delete" >삭제</button>
    </main>
 

</body>
<script>

const boardsStr = localStorage.getItem("boards");
const boardsObj = JSON.parse(boardsStr); // JSON.parse를 사용하면 객체로 형변환 + array로 변환
console.log(boardsObj)

const idx = location.search; // url 쿼리파라미터를 가져온다.
console.log(location)
console.log(idx)
 const index = idx.split("=")[1];
//const index = idx ? idx.split("=")[1] : 0;
console.log(index) // = 기준으로 나누고 나눠진 배열에서 두 번째 요소인 인덱스를 가져옴
const board = boardsObj[index];//인덱스를 사용해서 게시글 정보를 가져온다.
const viewFrm = document.querySelectorAll("#viewFrm > div");
//id가 viewFrn 아래의 div 태그 전부를 선택한다.


for (let i = 0; i < viewFrm.length; i++) {
    //div 요소들을 반복문을 통해서 순회한다.
    const id = viewFrm[i].id;
    //순회중인 div요소의 id를 가져온다.
  //  console.log(id)
    viewFrm[i].innerHTML += " " + board[id];
   //div 요소의 내부 html에 해당하는 게시글의 정보를 추가한다.
   //id를 사용하여 board 객체에서 해당 정보를 가져온다.

}
const beforeUrl = document.referrer;
console.log(beforeUrl);

// const viewCount = (beforeUrl) =>{
//     if(beforeUrl.split("/").pop()=="board")
//     //["http:", "", "localhost:3000", "board", "board"]  pop(): 이는 배열의 마지막 요소를 추출하고 반환
//     {
//         board.views++;
//         const viewCountStr = JSON.stringify(boardsObj);
//         localStorage.setItem("boards",viewCountStr)
//     }
// }

// viewCount(beforeUrl)

if(!board.refresh){
    board.views++;
    board.refresh = true;
    const viewCountStr = JSON.stringify(boardsObj);
    localStorage.setItem("boards", viewCountStr);
}
else{
    if(beforeUrl == " ")
    {
        board.views++;
        const viewCountStr = JSON.stringify(boardsObj);
        localStorage.setItem("boards", viewCountStr);
    }
}

const modifyBtn = document.querySelector("#modify")
console.log(modifyBtn)

const modifyBtnHandler = (e)=>{
    location = "/board/modify/" + idx;
   // "/board/board/index=" + index;
}
modifyBtn.addEventListener('click', modifyBtnHandler);

const deleteBtn = document.querySelector("#delete");

$(deleteBtn).on('click',(e)=>{
    boardsObj.splice(index, 1);
    //boardsObj 배열에서 index 위치부터 1개의 요소제거
    //boardsObj: 배열 객체 +  게시판의 모든 글이 이 배열에 저장
    // array.splice(start[, deleteCount[, item1[, item2[, ...]]]])
    // 인덱스에 위치한 거 삭제한다는 얘기
    console.log(boardsObj)
    for(let i = 0; i<boardsObj.length; i++)
    {
        //모든 게시글의 index를 순회하면서 현재의 인덱스로 업데이트
        //배열의 구조가 변경되기 때문에 index를 다시 할당하여 정확한 순서를 유지하기 위함
        boardsObj[i].index = i;
        // 이 부분이 인덱스를 재할당하는 부분
    }
    // 변화된 인덱스를 다시 boards에 할당
    const setBoardStr = JSON.stringify(boardsObj);
    localStorage.setItem("boards",setBoardStr)
    location.href = "/board/board"

})

</script>